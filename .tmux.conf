set-option -g default-terminal "screen-256color"
run-shell "powerline-config tmux setup > /dev/null"

set-window-option -g mode-keys vi
set-window-option -g xterm-keys on
if-shell "if [[ `tmux -V | cut -d' ' -f2` -lt 2.1 ]]; then true; else false; fi" \
    'set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on; bind -n WheelDownPane select-pane -t= \; send-keys -M'

#if-shell "if [[ `tmux -V | cut -d' ' -f2` -lt 2.1 ]]; then true; else false; fi" \
#    bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"

if-shell "if [[ `tmux -V | cut -d' ' -f2` -lt 2.1 ]]; then true; else false; fi" \
    'bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= \"#{pane_in_mode}\" \"send-keys -M\" \"select-pane -t=; copy-mode -e; send-keys -M\""'

if-shell "if [[ `tmux -V | cut -d' ' -f2` -ge 2.1 ]]; then true; else false; fi" \
    'set -g mouse on; set -g mouse-utf8 on'

set -sg escape-time 0

unbind C-b
set -g prefix C-a
bind C-a send-prefix

unbind [
bind v copy-mode
unbind p
bind p paste-buffer

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy '_' start-of-line

bind y run-shell "tmux show-buffer | xclip -selection clipboard -i > /dev/null"
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind c new-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'
bind '"' split-window -v -c '#{pane_current_path}'
bind r split-window -v -p 15 -c '#{pane_current_path}'
bind t split-window -h -p 15 -c '#{pane_current_path}'
bind x kill-pane
bind o last-window
bind + next-window
bind - previous-window
bind - previous-window
bind b run-shell "~/bin/tmux-toggle-zoom-last-pane.sh"

